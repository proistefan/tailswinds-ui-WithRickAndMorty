{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/WebstormProjects/tailswinds-ui/pages/characters/[id].js\";\nvar __jsx = React.createElement;\nimport { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nconst GET_CHARACTER = gql`\n    query character($id: ID!){\n        character(id: $id){\n            id\n            name\n            name\n            status\n            species\n            type\n            gender\n            origin{\n                name\n            }\n            image\n            episode {\n                id\n                name\n                air_date\n                episode\n            }\n            created\n        }\n    }\n\n`;\n\nconst character = () => {\n  const router = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CHARACTER, {\n    variables: {\n      id: router.query.id\n    }\n  });\n  if (loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"...Loading\");\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, Error.toString());\n  const character = data.character || {};\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"Hero font-mono text-lg py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, character.name)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(\"hr\", {\n    style: {\n      marginRight: '20%',\n      marginLeft: '20%',\n      border: '1px solid black',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"sm:gird sm:grid-cols-1 md:flex lg:flex font-mono \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"align-center content-center mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"h-14 w-14\",\n    src: character.image,\n    alt: character.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"flex flex-col mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"underline text-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Information:\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Gender: \", character.gender), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Species: \", character.species), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Origin: \", character.origin.name), __jsx(\"div\", {\n    className: \"text-red-500 underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Status: \", character.status), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"underline text-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Episodes: \", character.episode.length), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), character.episode.map(episode => {\n    return __jsx(\"div\", {\n      key: episode.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"flex flex-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, \"--\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), \"Name: \", episode.name, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), \"AirDate: \", episode.air_date));\n  }))));\n};\n\nexport default withApollo({\n  ssr: false\n})(character);","map":{"version":3,"sources":["/Users/mbp/WebstormProjects/tailswinds-ui/pages/characters/[id].js"],"names":["withApollo","useQuery","React","useRouter","gql","GET_CHARACTER","character","router","data","loading","error","variables","id","query","Error","toString","name","marginRight","marginLeft","border","marginBottom","image","gender","species","origin","status","episode","length","map","air_date","ssr"],"mappings":"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","sourcesContent":["import { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\n\nconst GET_CHARACTER =  gql`\n    query character($id: ID!){\n        character(id: $id){\n            id\n            name\n            name\n            status\n            species\n            type\n            gender\n            origin{\n                name\n            }\n            image\n            episode {\n                id\n                name\n                air_date\n                episode\n            }\n            created\n        }\n    }\n\n`\n\nconst character = () => {\n\n  const router = useRouter();\n\n  const { data, loading, error } = useQuery(GET_CHARACTER, {\n    variables: {id: router.query.id}\n  });\n\n\n  if (loading) return <div>...Loading</div>;\n  if (error) return <div>{Error.toString()}</div>\n\n  const character = data.character || {};\n\n  return (\n    <>\n    <div className=\"Hero font-mono text-lg py-2\">\n      <div className=\"title\">\n        {character.name}\n      </div>\n    </div>\n      <br/>\n      <hr style={{marginRight: '20%', marginLeft: '20%', border: '1px solid black', marginBottom: '2rem'}}/>\n      <div className=\"sm:gird sm:grid-cols-1 md:flex lg:flex font-mono \" >\n        <div className=\"align-center content-center mx-2\">\n          <img className=\"h-14 w-14\" src={character.image} alt={character.name} />\n        </div>\n        <div className=\"flex flex-col mx-2\">\n          <div>\n            <span className=\"underline text-xl\">Information:</span>\n          </div>\n          <div>\n            Gender: {character.gender}\n          </div>\n          <div>\n            Species: {character.species}\n          </div>\n          <div>\n            Origin: {character.origin.name}\n          </div>\n          <div className=\"text-red-500 underline\">\n            Status: {character.status}\n          </div>\n          <br/>\n          <hr/>\n        </div>\n        <div className=\"mx-2\">\n          <span className=\"underline text-xl\">\n            Episodes: {character.episode.length}\n          </span>\n          <br/>\n          {\n            character.episode.map((episode) => {\n              return(\n                <div key={episode.id}>\n                  <div className=\"flex flex-col\">\n                    --\n                    <br/>\n                    Name: {episode.name}\n                    <br/>\n                    AirDate: {episode.air_date}\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    </>\n  )\n\n}\n\nexport default withApollo({ssr: false})(character)\n\n"]},"metadata":{},"sourceType":"module"}