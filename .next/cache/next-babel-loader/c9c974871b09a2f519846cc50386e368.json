{"ast":null,"code":"var __jsx = React.createElement;\nimport { withApollo } from '../../apollo/apollo.js';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport apolloClient from \"../../apolloClient\";\nimport { ALL_CHARACTER_IDS, GET_CHARACTER } from \"../../queries/characterQueries\";\nexport async function getStaticPaths(ctx) {\n  const client = await apolloClient(ctx);\n  const response = await client.query({\n    query: ALL_CHARACTER_IDS\n  });\n  const {\n    count\n  } = response.data.characters.info;\n  const ids = [...Array(count).keys()];\n  const paths = ids.map(id => ({\n    params: {\n      id: `${id + 1}`\n    }\n  }));\n  return {\n    paths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}, ctx) {\n  const client = await apolloClient(ctx);\n  const response = await client.query({\n    query: GET_CHARACTER,\n    variables: {\n      id: `${params.id}`\n    }\n  });\n  const {\n    character\n  } = response.data;\n  return {\n    props: {\n      character,\n      loading: response.loading,\n      error: !response.error ? null : response.error\n    }\n  };\n}\n\nconst character = ({\n  character,\n  loading,\n  error\n}) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    if (loading) return __jsx(\"div\", {\n      className: \"flex items-center justify-center title\"\n    }, \"...Loading\");\n    if (error) return __jsx(\"div\", null, Error.toString());\n  }\n\n  const handleClick = e => {\n    e.preventDefault();\n    router.push('/');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"Hero font-mono text-lg py-2 bg-blue-500\"\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    className: \"text-black bg-white hover:bg-black hover:text-white font-mono py-2 px-4 border border-black rounded m-2\"\n  }, \"Home\"), __jsx(\"div\", {\n    className: \"title\"\n  }, character.name), __jsx(\"br\", null), __jsx(\"hr\", {\n    style: {\n      marginRight: '20%',\n      marginLeft: '20%',\n      border: '1px solid black',\n      marginBottom: '2rem'\n    }\n  }), __jsx(\"br\", null)), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"sm:gird sm:grid-cols-1 md:flex lg:flex font-mono \"\n  }, __jsx(\"div\", {\n    className: \"align-center content-center mx-2\"\n  }, __jsx(\"img\", {\n    className: \"h-14 w-14 shadow-lg\",\n    src: character.image,\n    alt: character.name\n  })), __jsx(\"div\", {\n    className: \"flex flex-col mx-2\"\n  }, __jsx(\"div\", null, __jsx(\"span\", {\n    className: \"underline text-xl\"\n  }, \"Information:\")), __jsx(\"div\", null, \"Gender: \", character.gender), __jsx(\"div\", null, \"Species: \", character.species), __jsx(\"div\", null, \"Origin: \", character.origin.name), __jsx(\"div\", {\n    className: \"text-red-500 underline\"\n  }, \"Status: \", character.status), __jsx(\"br\", null), __jsx(\"hr\", null)), __jsx(\"div\", {\n    className: \"mx-2\"\n  }, __jsx(\"span\", {\n    className: \"underline text-xl content-center\"\n  }, \"Episodes: \", character.episode.length), __jsx(\"br\", null), character.episode.map(episode => {\n    return __jsx(\"div\", {\n      key: episode.id,\n      className: \"border-gray-600 border rounded px-4 py-2 my-1 shadow hover:bg-black hover:text-white duration-300\"\n    }, __jsx(Link, {\n      href: `/episodes/${episode.id}`\n    }, __jsx(\"a\", null, __jsx(\"div\", {\n      className: \"flex flex-col\"\n    }, __jsx(\"br\", null), \"Name: \", episode.name, __jsx(\"br\", null), \"AirDate: \", episode.air_date))));\n  }))));\n};\n\nexport default withApollo({\n  ssr: false\n})(character);","map":null,"metadata":{},"sourceType":"module"}