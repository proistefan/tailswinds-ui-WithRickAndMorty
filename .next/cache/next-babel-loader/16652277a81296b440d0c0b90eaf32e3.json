{"ast":null,"code":"var _jsxFileName = \"/Users/mbp/WebstormProjects/tailswinds-ui/pages/index.js\";\nvar __jsx = React.createElement;\nimport Card from \"../components/Card\";\nimport { withApollo } from '../apollo/apollo';\nimport React, { useEffect, useState } from \"react\";\nimport _ from 'lodash';\nimport apolloClient from \"../apolloClient\";\nimport { ALL_CHARACTERS } from \"../queries/characterQueries\";\nexport async function getStaticProps() {\n  const ids = [...Array(591).keys()];\n  const characterUrl = `https://rickandmortyapi.com/api/character/${ids.join(\",\")}`;\n  const res = await fetch(characterUrl);\n  const characters = await res.json();\n  return {\n    props: {\n      characters\n    }\n  };\n} // For GraphQL API - haven't figured out how to stream results\n// export async function getStaticProps(ctx) {\n//   const client = await apolloClient(ctx)\n//   const response = await client.query({\n//     query: ALL_CHARACTERS\n//   })\n//\n//   return {\n//     props: {\n//       characters: response.data.characters.results,\n//       loading: response.loading,\n//       error: !response.error ? null : response.error\n//     },\n//   }\n// }\n\nconst IndexPage = ({\n  characters\n}) => {\n  const {\n    0: chars,\n    1: setChars\n  } = useState(characters);\n  const {\n    0: lookup,\n    1: setLookup\n  } = useState('');\n  useEffect(() => {\n    const res = _.filter(chars, char => char.name.toLowerCase().includes(lookup.toLowerCase()));\n\n    const results = chars.filter();\n    setChars(res);\n  }, [lookup]);\n\n  const handleChange = e => {\n    setLookup(e.target.value);\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setChars(characters);\n  }; // if (error) return <h1 className=\"flex justify-center\">Error</h1>;\n  // if (loading) return <h1 className=\"flex items-center justify-center title\">... Loading</h1>\n\n\n  return __jsx(\"div\", {\n    className: \"bg-gray-200 h-auto w-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"shadow-lg hero bg-blue-500 font-mono text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Rick & Morty\"), __jsx(\"h3\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \" with Next.js, Apollo GraphQL\"), __jsx(\"h3\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"and Tailwind CSS\"), __jsx(\"h3\", {\n    className: \"flex justify-center underline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: 'https://github.com/MuddyBootsCode/tailswinds-ui',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Git Repo here\"))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-1/2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"username\",\n    type: \"text\",\n    placeholder: \"Character Search\",\n    value: lookup,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    className: \"text-black bg-white hover:bg-black hover:text-white font-mono py-2 px-4 border border-black rounded m-2\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Reset Search\")), __jsx(\"div\", {\n    className: \"sm:flex sm:flex-col sm:justify-center md:grid md:grid-cols-2 lg:grid lg:grid-cols-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, chars.map(data => {\n    return __jsx(Card, {\n      heading: data.name,\n      text: data.status,\n      img: !data.image ? '/rickandmorty.jpg' : data.image,\n      key: data.id,\n      id: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\nexport default withApollo({\n  ssr: false\n})(IndexPage);","map":{"version":3,"sources":["/Users/mbp/WebstormProjects/tailswinds-ui/pages/index.js"],"names":["Card","withApollo","React","useEffect","useState","_","apolloClient","ALL_CHARACTERS","getStaticProps","ids","Array","keys","characterUrl","join","res","fetch","characters","json","props","IndexPage","chars","setChars","lookup","setLookup","filter","char","name","toLowerCase","includes","results","handleChange","e","target","value","handleClick","preventDefault","map","data","status","image","id","ssr"],"mappings":"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","sourcesContent":["import Card from \"../components/Card\";\nimport { withApollo } from '../apollo/apollo';\nimport React, {useEffect, useState} from \"react\";\nimport _ from 'lodash';\nimport apolloClient from \"../apolloClient\";\nimport {ALL_CHARACTERS} from \"../queries/characterQueries\";\n\nexport async function getStaticProps() {\n  const ids = [...Array(591).keys()];\n  const characterUrl = `https://rickandmortyapi.com/api/character/${ids.join(\",\")}`\n\n  const res = await fetch(characterUrl);\n\n  const characters = await res.json()\n\n  return{\n    props:{\n      characters\n    }\n  }\n}\n\n// For GraphQL API - haven't figured out how to stream results\n// export async function getStaticProps(ctx) {\n//   const client = await apolloClient(ctx)\n//   const response = await client.query({\n//     query: ALL_CHARACTERS\n//   })\n//\n//   return {\n//     props: {\n//       characters: response.data.characters.results,\n//       loading: response.loading,\n//       error: !response.error ? null : response.error\n//     },\n//   }\n// }\n\nconst IndexPage = ({ characters }) => {\n\n  const [chars, setChars] = useState(characters);\n\n  const [lookup, setLookup] = useState('');\n\n  useEffect(() => {\n    const res = _.filter(chars, char => char.name.toLowerCase().includes(lookup.toLowerCase()))\n\n    const results = chars.filter()\n    setChars(res);\n  }, [lookup]);\n\n  const handleChange = e => {\n    setLookup(e.target.value);\n  };\n\n  const handleClick = e => {\n    e.preventDefault()\n    setChars(characters)\n  };\n\n  // if (error) return <h1 className=\"flex justify-center\">Error</h1>;\n  // if (loading) return <h1 className=\"flex items-center justify-center title\">... Loading</h1>\n\n  return (\n    <div className=\"bg-gray-200 h-auto w-auto\">\n      <div className=\"shadow-lg hero bg-blue-500 font-mono text-white\">\n        <h1 className=\"title\">Rick & Morty</h1>\n        <h3 className=\"flex justify-center\"> with Next.js, Apollo GraphQL</h3>\n        <h3 className=\"flex justify-center\">and Tailwind CSS</h3>\n        <h3 className=\"flex justify-center underline\">\n          <a href={'https://github.com/MuddyBootsCode/tailswinds-ui'}>\n            Git Repo here\n          </a>\n        </h3>\n      </div>\n      <br/>\n      <div className=\"flex justify-center\">\n        <input\n          className=\"shadow appearance-none border rounded w-1/2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"username\" type=\"text\" placeholder=\"Character Search\"\n          value={lookup}\n          onChange={handleChange}\n        />\n        <button\n          className=\"text-black bg-white hover:bg-black hover:text-white font-mono py-2\n         px-4 border border-black rounded m-2\"\n          onClick={handleClick}\n        >\n          Reset Search\n        </button>\n      </div>\n        <div className=\"sm:flex sm:flex-col sm:justify-center md:grid md:grid-cols-2 lg:grid lg:grid-cols-4\">\n          {chars.map((data) => {\n            return (\n              <Card\n                heading={data.name}\n                text={data.status}\n                img={!data.image ? '/rickandmorty.jpg' : data.image}\n                key={data.id}\n                id={data.id}\n              />\n            )\n          })}\n        </div>\n    </div>\n  )\n};\n\nexport default withApollo({ ssr: false })(IndexPage);\n"]},"metadata":{},"sourceType":"module"}