{"ast":null,"code":"var __jsx = React.createElement;\nimport { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport Card from \"../../components/Card\";\nconst GET_EPISODE = gql`\n    query episode($id: ID!){\n        episode(id: $id){\n            id\n            name\n            air_date\n            episode\n            characters{\n                id\n                name\n                image\n            }\n        }\n    }\n`;\n\nconst episode = () => {\n  const router = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_EPISODE, {\n    variables: {\n      id: router.query.id\n    }\n  });\n  if (loading) return __jsx(\"div\", null, \"...Loading\");\n  if (error) return __jsx(\"div\", null, Error.toString());\n  const episode = data.episode || {};\n\n  const handleClick = e => {\n    e.preventDefault();\n    router.push('/');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"Hero font-mono text-lg py-2\"\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    className: \"text-black hover:bg-black hover:text-white font-mono py-2 px-4 border border-black rounded m-2\"\n  }, \"Home\"), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"title\"\n  }, \"Episode \", router.query.id), __jsx(\"div\", {\n    className: \"title\"\n  }, episode.name), __jsx(\"div\", {\n    className: \"flex justify-center\"\n  }, episode.air_date))), __jsx(\"hr\", null), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"font-mono title\"\n  }, \"Cast\"), __jsx(\"div\", {\n    className: \"sm:flex sm:flex-col sm:justify-center sm:content-center sm:items-center md:grid md:grid-cols-2 lg:grid lg:grid-cols-4\"\n  }, episode.characters.map(data => {\n    return __jsx(Card, {\n      heading: data.name,\n      text: data.status,\n      img: loading ? '/rickandmorty.jpg' : data.image,\n      key: data.id,\n      id: data.id\n    });\n  }))));\n};\n\nexport default withApollo({\n  ssr: true\n})(episode);","map":null,"metadata":{},"sourceType":"module"}