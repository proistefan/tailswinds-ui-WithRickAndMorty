{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mbp/WebstormProjects/tailswinds-ui/pages/characters/[id].js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query character($id: ID!){\\n        character(id: $id){\\n            id\\n            name\\n        }\\n    }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react'; // import { GET_CHARACTER } from '../../queries/characterQueries';\n\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nvar GET_CHARACTER = gql(_templateObject());\n\nvar id = function id() {\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_CHARACTER, {\n    variables: {\n      id: router.query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  }, \"...Loading\");\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, Error.toString());\n  var character = data.character[0] || {};\n  console.log(character);\n  console.log(data, error);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Stuff\");\n};\n\nexport default withApollo({\n  ssr: false\n})(id);","map":{"version":3,"sources":["/Users/mbp/WebstormProjects/tailswinds-ui/pages/characters/[id].js"],"names":["withApollo","useQuery","React","useRouter","gql","GET_CHARACTER","id","router","variables","query","data","loading","error","Error","toString","character","console","log","ssr"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,aAAa,GAAID,GAAJ,mBAAnB;;AAUA,IAAME,EAAE,GAAG,SAALA,EAAK,GAAM;AAEf,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAFe,kBAIkBF,QAAQ,CAACI,aAAD,EAAgB;AACvDG,IAAAA,SAAS,EAAE;AAACF,MAAAA,EAAE,EAAEC,MAAM,CAACE,KAAP,CAAaH;AAAlB;AAD4C,GAAhB,CAJ1B;AAAA,MAIPI,IAJO,aAIPA,IAJO;AAAA,MAIDC,OAJC,aAIDA,OAJC;AAAA,MAIQC,KAJR,aAIQA,KAJR;;AASf,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,KAAK,CAACC,QAAN,EAAN,CAAP;AAEX,MAAMC,SAAS,GAAGL,IAAI,CAACK,SAAL,CAAe,CAAf,KAAqB,EAAvC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAAkBE,KAAlB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD,CAxBD;;AA0BA,eAAeZ,UAAU,CAAC;AAACkB,EAAAA,GAAG,EAAE;AAAN,CAAD,CAAV,CAAyBZ,EAAzB,CAAf","sourcesContent":["import { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\n// import { GET_CHARACTER } from '../../queries/characterQueries';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\n\nconst GET_CHARACTER =  gql`\n    query character($id: ID!){\n        character(id: $id){\n            id\n            name\n        }\n    }\n\n`\n\nconst id = () => {\n\n  const router = useRouter();\n\n  const { data, loading, error } = useQuery(GET_CHARACTER, {\n    variables: {id: router.query.id}\n  });\n\n\n  if (loading) return <div>...Loading</div>;\n  if (error) return <div>{Error.toString()}</div>\n\n  const character = data.character[0] || {};\n\n  console.log(character);\n\n  console.log(data, error)\n\n  return (\n    <div>\n      Stuff\n    </div>\n  )\n\n}\n\nexport default withApollo({ssr: false})(id)\n\n"]},"metadata":{},"sourceType":"module"}