{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query character($id: ID!){\\n        character(id: $id){\\n            id\\n            name\\n            name\\n            status\\n            species\\n            type\\n            gender\\n            origin{\\n                name\\n            }\\n            image\\n            episode {\\n                id\\n                name\\n                air_date\\n                episode\\n            }\\n            created\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nvar GET_CHARACTER = gql(_templateObject());\n\nvar character = function character() {\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_CHARACTER, {\n    variables: {\n      id: router.query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"div\", null, \"...Loading\");\n  if (error) return __jsx(\"div\", null, Error.toString());\n  var character = data.character || {};\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n    router.push('/');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"Hero font-mono text-lg py-2\"\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    className: \"text-black hover:bg-black hover:text-white font-mono py-2 px-4 border border-black rounded m-2\"\n  }, \"Home\"), __jsx(\"div\", {\n    className: \"title\"\n  }, character.name)), __jsx(\"br\", null), __jsx(\"hr\", {\n    style: {\n      marginRight: '20%',\n      marginLeft: '20%',\n      border: '1px solid black',\n      marginBottom: '2rem'\n    }\n  }), __jsx(\"div\", {\n    className: \"sm:gird sm:grid-cols-1 md:flex lg:flex font-mono \"\n  }, __jsx(\"div\", {\n    className: \"align-center content-center mx-2\"\n  }, __jsx(\"img\", {\n    className: \"h-14 w-14 shadow-lg\",\n    src: character.image,\n    alt: character.name\n  })), __jsx(\"div\", {\n    className: \"flex flex-col mx-2\"\n  }, __jsx(\"div\", null, __jsx(\"span\", {\n    className: \"underline text-xl\"\n  }, \"Information:\")), __jsx(\"div\", null, \"Gender: \", character.gender), __jsx(\"div\", null, \"Species: \", character.species), __jsx(\"div\", null, \"Origin: \", character.origin.name), __jsx(\"div\", {\n    className: \"text-red-500 underline\"\n  }, \"Status: \", character.status), __jsx(\"br\", null), __jsx(\"hr\", null)), __jsx(\"div\", {\n    className: \"mx-2\"\n  }, __jsx(\"span\", {\n    className: \"underline text-xl content-center\"\n  }, \"Episodes: \", character.episode.length), __jsx(\"br\", null), character.episode.map(function (episode) {\n    return __jsx(\"div\", {\n      key: episode.id,\n      className: \"border-gray-600 border rounded px-4 py-2 my-1 shadow hover:bg-black hover:text-white duration-300\"\n    }, __jsx(Link, {\n      href: \"/episodes/\".concat(episode.id)\n    }, __jsx(\"a\", null, __jsx(\"div\", {\n      className: \"flex flex-col\"\n    }, __jsx(\"br\", null), \"Name: \", episode.name, __jsx(\"br\", null), \"AirDate: \", episode.air_date))));\n  }))));\n};\n\nexport default withApollo({\n  ssr: false\n})(character);","map":null,"metadata":{},"sourceType":"module"}