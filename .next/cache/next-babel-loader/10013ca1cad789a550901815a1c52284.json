{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mbp/WebstormProjects/tailswinds-ui/pages/characters/[id].js\";\n\nvar __jsx = React.createElement;\nimport { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { GET_CHARACTER } from '../../queries/characterQueries';\nimport { useRouter } from 'next/router';\n\nvar id = function id() {\n  var router = useRouter();\n  console.log(router.query, ' Router Query');\n\n  var _useQuery = useQuery(GET_CHARACTER, {\n    variables: {\n      id: router.query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }\n  }, \"...Loading\");\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, error);\n  var character = data.character[0] || {};\n  console.log(data);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Stuff\");\n};\n\nexport default withApollo({\n  ssr: false\n})(id);","map":{"version":3,"sources":["/Users/mbp/WebstormProjects/tailswinds-ui/pages/characters/[id].js"],"names":["withApollo","useQuery","React","GET_CHARACTER","useRouter","id","router","console","log","query","variables","data","loading","error","character","ssr"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,EAAE,GAAG,SAALA,EAAK,GAAM;AAEf,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAnB,EAA0B,eAA1B;;AAJe,kBAMkBR,QAAQ,CAACE,aAAD,EAAgB;AACvDO,IAAAA,SAAS,EAAE;AAACL,MAAAA,EAAE,EAAEC,MAAM,CAACG,KAAP,CAAaJ;AAAlB;AAD4C,GAAhB,CAN1B;AAAA,MAMPM,IANO,aAMPA,IANO;AAAA,MAMDC,OANC,aAMDA,OANC;AAAA,MAMQC,KANR,aAMQA,KANR;;AAWf,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAN,CAAP;AAEX,MAAMC,SAAS,GAAGH,IAAI,CAACG,SAAL,CAAe,CAAf,KAAqB,EAAvC;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAMD,CAxBD;;AA0BA,eAAeX,UAAU,CAAC;AAACe,EAAAA,GAAG,EAAE;AAAN,CAAD,CAAV,CAAyBV,EAAzB,CAAf","sourcesContent":["import { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { GET_CHARACTER } from '../../queries/characterQueries';\nimport { useRouter } from 'next/router';\n\nconst id = () => {\n\n  const router = useRouter();\n\n  console.log(router.query, ' Router Query')\n\n  const { data, loading, error } = useQuery(GET_CHARACTER, {\n    variables: {id: router.query.id}\n  });\n\n\n  if (loading) return <div>...Loading</div>;\n  if (error) return <div>{error}</div>\n\n  const character = data.character[0] || {};\n\n  console.log(data)\n\n  return (\n    <div>\n      Stuff\n    </div>\n  )\n\n}\n\nexport default withApollo({ssr: false})(id)\n\n"]},"metadata":{},"sourceType":"module"}