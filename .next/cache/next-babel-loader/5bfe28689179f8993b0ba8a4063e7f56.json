{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query{\\n        characters{\\n            results{\\n                id\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query{\\n        characters{\\n            results{\\n                id\\n                name\\n                image\\n                status\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query character($id: ID!){\\n        character(id: $id){\\n            id\\n            name\\n            name\\n            status\\n            species\\n            type\\n            gender\\n            origin{\\n                name\\n            }\\n            image\\n            episode {\\n                id\\n                name\\n                air_date\\n                episode\\n            }\\n            created\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var GET_CHARACTER = gql(_templateObject());\nexport var ALL_CHARACTERS = gql(_templateObject2());\nexport var ALL_CHARACTER_IDS = gql(_templateObject3());","map":{"version":3,"sources":["/Users/mbp/WebstormProjects/tailswinds-ui/queries/characterQueries.js"],"names":["gql","GET_CHARACTER","ALL_CHARACTERS","ALL_CHARACTER_IDS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,aAAa,GAAID,GAAJ,mBAAnB;AAyBP,OAAO,IAAME,cAAc,GAAGF,GAAH,oBAApB;AAaP,OAAO,IAAMG,iBAAiB,GAAGH,GAAH,oBAAvB","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_CHARACTER =  gql`\n    query character($id: ID!){\n        character(id: $id){\n            id\n            name\n            name\n            status\n            species\n            type\n            gender\n            origin{\n                name\n            }\n            image\n            episode {\n                id\n                name\n                air_date\n                episode\n            }\n            created\n        }\n    }\n`;\n\nexport const ALL_CHARACTERS = gql`\n    query{\n        characters{\n            results{\n                id\n                name\n                image\n                status\n            }\n        }\n    }\n`;\n\nexport const ALL_CHARACTER_IDS = gql`\n    query{\n        characters{\n            results{\n                id\n            }\n        }\n    }\n`;"]},"metadata":{},"sourceType":"module"}