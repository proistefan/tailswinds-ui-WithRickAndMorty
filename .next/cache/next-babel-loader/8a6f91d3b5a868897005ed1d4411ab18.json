{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mbp/WebstormProjects/tailswinds-ui/pages/episodes/[id].js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query episode($id: ID!){\\n        episode(id: $id){\\n            id\\n            name\\n            air_date\\n            episode\\n            characters{\\n                id\\n                name\\n                image\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport Card from \"../../components/Card\";\nvar GET_EPISODE = gql(_templateObject());\n\nvar episode = function episode() {\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_EPISODE, {\n    variables: {\n      id: router.query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, \"...Loading\");\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, Error.toString());\n  var episode = data.episode || {};\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n    router.push('/');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"Hero font-mono text-lg py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    className: \"text-black hover:bg-black hover:text-white font-mono py-2 px-4 border border-black rounded m-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Home\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Episode \", router.query.id), __jsx(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, episode.name), __jsx(\"div\", {\n    className: \"flex justify-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, episode.air_date))), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"font-mono title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Cast\"), __jsx(\"div\", {\n    className: \"sm:flex sm:flex-col sm:justify-center sm:content-center sm:items-center md:grid md:grid-cols-2 lg:grid lg:grid-cols-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, episode.characters.map(function (data) {\n    return __jsx(Card, {\n      heading: data.name,\n      text: data.status,\n      img: loading ? '/rickandmorty.jpg' : data.image,\n      key: data.id,\n      id: data.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nexport default withApollo({\n  ssr: true\n})(episode);","map":{"version":3,"sources":["/Users/mbp/WebstormProjects/tailswinds-ui/pages/episodes/[id].js"],"names":["withApollo","useQuery","React","useRouter","gql","Link","Card","GET_EPISODE","episode","router","variables","id","query","data","loading","error","Error","toString","handleClick","e","preventDefault","push","name","air_date","characters","map","status","image","ssr"],"mappings":"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","sourcesContent":["import { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nimport Card from \"../../components/Card\";\n\nconst GET_EPISODE =  gql`\n    query episode($id: ID!){\n        episode(id: $id){\n            id\n            name\n            air_date\n            episode\n            characters{\n                id\n                name\n                image\n            }\n        }\n    }\n`;\n\nconst episode = () => {\n\n  const router = useRouter();\n\n  const { data, loading, error } = useQuery(GET_EPISODE, {\n    variables: {id: router.query.id}\n  });\n\n  if (loading) return <div>...Loading</div>;\n  if (error) return <div>{Error.toString()}</div>\n\n  const episode = data.episode || {};\n\n  const handleClick = e => {\n    e.preventDefault()\n    router.push('/')\n  }\n\n  return (\n    <>\n      <div className=\"Hero font-mono text-lg py-2\">\n        <button\n          onClick={handleClick}\n          className=\"text-black hover:bg-black hover:text-white font-mono py-2\n         px-4 border border-black rounded m-2\"\n        >\n          Home\n        </button>\n        <div>\n          <div className=\"title\">\n            Episode {router.query.id}\n          </div>\n          <div className=\"title\">\n            {episode.name}\n          </div>\n          <div className=\"flex justify-center\">\n            {episode.air_date}\n          </div>\n        </div>\n      </div>\n      <hr/>\n      <div>\n        <div className=\"font-mono title\">\n          Cast\n        </div>\n        <div className=\"sm:flex sm:flex-col sm:justify-center sm:content-center\n         sm:items-center md:grid md:grid-cols-2 lg:grid lg:grid-cols-4\">\n          {episode.characters.map((data) => {\n            return (\n              <Card\n                heading={data.name}\n                text={data.status}\n                img={loading ? '/rickandmorty.jpg' : data.image}\n                key={data.id}\n                id={data.id}\n              />\n            )\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withApollo({ssr: true})(episode);"]},"metadata":{},"sourceType":"module"}