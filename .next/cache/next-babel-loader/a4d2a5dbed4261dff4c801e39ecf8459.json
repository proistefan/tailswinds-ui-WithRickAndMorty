{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mbp/WebstormProjects/tailswinds-ui/pages/episodes/[id].js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query episode($id: ID!){\\n        episode(id: $id){\\n            id\\n            name\\n            air_date\\n            episode\\n            characters{\\n                id\\n                name\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\nvar GET_EPISODE = gql(_templateObject());\n\nvar episode = function episode() {\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_EPISODE, {\n    variables: {\n      id: router.query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, \"...Loading\");\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, Error.toString());\n  console.log(data);\n  var episode = data.episode || {};\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, episode);\n};\n\nexport default withApollo({\n  ssr: true\n})(episode);","map":{"version":3,"sources":["/Users/mbp/WebstormProjects/tailswinds-ui/pages/episodes/[id].js"],"names":["withApollo","useQuery","React","useRouter","gql","Link","GET_EPISODE","episode","router","variables","id","query","data","loading","error","Error","toString","console","log","ssr"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAMC,WAAW,GAAIF,GAAJ,mBAAjB;;AAeA,IAAMG,OAAO,GAAG,mBAAM;AAEpB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAFoB,kBAIaF,QAAQ,CAACK,WAAD,EAAc;AACrDG,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEF,MAAM,CAACG,KAAP,CAAaD;AAAlB;AAD0C,GAAd,CAJrB;AAAA,MAIZE,IAJY,aAIZA,IAJY;AAAA,MAINC,OAJM,aAINA,OAJM;AAAA,MAIGC,KAJH,aAIGA,KAJH;;AAQpB,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,KAAK,CAACC,QAAN,EAAN,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,MAAML,OAAO,GAAGK,IAAI,CAACL,OAAL,IAAgB,EAAhC;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADF;AAKD,CArBD;;AAuBA,eAAeP,UAAU,CAAC;AAACmB,EAAAA,GAAG,EAAE;AAAN,CAAD,CAAV,CAAwBZ,OAAxB,CAAf","sourcesContent":["import { withApollo } from '../../apollo/apollo.js';\nimport { useQuery } from '@apollo/react-hooks';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport gql from 'graphql-tag';\nimport Link from 'next/link';\n\nconst GET_EPISODE =  gql`\n    query episode($id: ID!){\n        episode(id: $id){\n            id\n            name\n            air_date\n            episode\n            characters{\n                id\n                name\n            }\n        }\n    }\n`;\n\nconst episode = () => {\n\n  const router = useRouter();\n\n  const { data, loading, error } = useQuery(GET_EPISODE, {\n    variables: {id: router.query.id}\n  });\n\n  if (loading) return <div>...Loading</div>;\n  if (error) return <div>{Error.toString()}</div>\n\n  console.log(data)\n\n  const episode = data.episode || {};\n\n\n  return (\n    <div>\n      {episode}\n    </div>\n  );\n};\n\nexport default withApollo({ssr: true})(episode);"]},"metadata":{},"sourceType":"module"}